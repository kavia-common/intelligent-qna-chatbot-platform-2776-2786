{"is_source_file": true, "format": "Python", "description": "This file provides a chat service for generating responses using Google's Gemini API via the LangChain framework, with fallback to mock responses if the API key is not set. It defines a custom exception, a primary function to generate chat responses, and handles configuration through environment variables.", "external_files": ["langchain_core.messages", "langchain_google_genai"], "external_methods": ["langchain_google_genai.ChatGoogleGenerativeAI.invoke", "langchain_core.messages.HumanMessage", "langchain_core.messages.SystemMessage", "langchain_core.messages.AIMessage"], "published": ["get_chat_response", "ChatServiceError"], "classes": [{"name": "ChatServiceError", "description": "Custom exception raised when the chat service encounters processing errors."}], "methods": [{"name": "str get_chat_response(messages: List[Dict[str, str]])", "description": "Main function to generate a chat response by interacting with the Gemini API or returning a mocked response if API keys are missing or mock mode is activated.", "scope": "", "scopeKind": ""}], "calls": ["langchain_google_genai.ChatGoogleGenerativeAI", "llm.invoke"], "search-terms": ["get_chat_response", "ChatServiceError", "Gemini API", "LangChain", "chat response", "mock response", "environment variables"], "state": 2, "file_id": 20, "knowledge_revision": 58, "git_revision": "5179f4c1a1ea788dc2deb48787ede9fe5cf3a590", "revision_history": [{"43": ""}, {"58": "5179f4c1a1ea788dc2deb48787ede9fe5cf3a590"}], "ctags": [{"_type": "tag", "name": "ChatServiceError", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/api/services.py", "pattern": "/^class ChatServiceError(Exception):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "get_chat_response", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/api/services.py", "pattern": "/^def get_chat_response(messages: List[Dict[str, str]]) -> str:$/", "language": "Python", "typeref": "typename:str", "kind": "function", "signature": "(messages: List[Dict[str, str]])"}, {"_type": "tag", "name": "logger", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/api/services.py", "pattern": "/^logger = logging.getLogger(__name__)$/", "language": "Python", "kind": "variable"}], "hash": "e7057eb4b835eaf44172a77e3cd377c1", "format-version": 4, "code-base-name": "qna_backend", "filename": "qna_backend/api/services.py", "fields": [{"name": "logger = logging.getLogger(__name__)", "scope": "", "scopeKind": "", "description": "unavailable"}]}