{"is_source_file": true, "format": "Python", "description": "ASGI configuration file for a Django project. Sets up environment variables, particularly loading from a .env file if available, and exposes the ASGI application callable.", "external_files": ["django.core.asgi", "dotenv"], "external_methods": ["load_dotenv"], "published": ["application"], "classes": [], "methods": [{"name": "get_asgi_application", "description": "Function that returns the ASGI application callable for deployment."}], "calls": ["os.path.dirname", "os.path.abspath", "os.path.join", "os.path.exists", "load_dotenv", "get_asgi_application"], "search-terms": ["ASGI", "Django", "application", "env", ".env", "configuration", "asgi.py"], "state": 2, "file_id": 17, "knowledge_revision": 55, "git_revision": "6bca98a87662a3093ddb9c86bcc22b77d70a5c77", "revision_history": [{"35": "6bca98a87662a3093ddb9c86bcc22b77d70a5c77"}, {"55": "6bca98a87662a3093ddb9c86bcc22b77d70a5c77"}], "ctags": [{"_type": "tag", "name": "application", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/config/asgi.py", "pattern": "/^application = get_asgi_application()$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "base_dir", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/config/asgi.py", "pattern": "/^    base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))$/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "dotenv_path", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/config/asgi.py", "pattern": "/^    dotenv_path = os.path.join(base_dir, \".env\")$/", "language": "Python", "kind": "variable"}], "hash": "88d953cd22392328989973ace1cdec07", "format-version": 4, "code-base-name": "qna_backend", "filename": "qna_backend/config/asgi.py", "fields": [{"name": "application = get_asgi_application()", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "base_dir = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "dotenv_path = os.path.join(base_dir, \".env\")", "scope": "", "scopeKind": "", "description": "unavailable"}]}