{"is_source_file": true, "format": "Python", "description": "This file contains unit tests for API endpoints of a Django Rest Framework application, including health check, user signup, login, conversation creation, and chat functionalities.", "external_files": ["rest_framework.test", "django.urls"], "external_methods": ["rest_framework.test.APITestCase.__init__", "rest_framework.test.APITestCase.client", "django.urls.reverse"], "published": [], "classes": [{"name": "HealthTests", "description": "Test case for health check endpoint"}, {"name": "AuthAndChatTests", "description": "Test case for user authentication, conversation creation, and chat functionalities"}], "methods": [{"name": "test_health(self)", "description": "Tests server health endpoint for response correctness", "scope": "HealthTests", "scopeKind": "class"}, {"name": "setUp(self)", "description": "Initial setup for authentication and conversation URL endpoints", "scope": "AuthAndChatTests", "scopeKind": "class"}, {"name": "_auth_headers(self, access)", "description": "Generates authorization headers with a given access token", "scope": "AuthAndChatTests", "scopeKind": "class"}, {"name": "test_signup_login_and_chat_mock(self)", "description": "Performs integration test of signup, login, conversation creation, and chat exchange", "scope": "AuthAndChatTests", "scopeKind": "class"}], "calls": ["reverse('Health')", "self.client.get(url)", "self.client.post(self.signup_url, ...)", "self.client.post(self.login_url, ...)", "self.client.post(self.conversations_url, ...)", "self.client.post(self.chat_url, ...)"], "search-terms": ["APITestCase", "HealthTests", "AuthAndChatTests", "signup", "login", "conversation", "chat", "API tests", "Django REST Framework"], "state": 2, "file_id": 7, "knowledge_revision": 51, "git_revision": "6bca98a87662a3093ddb9c86bcc22b77d70a5c77", "revision_history": [{"28": "6bca98a87662a3093ddb9c86bcc22b77d70a5c77"}, {"49": "6bca98a87662a3093ddb9c86bcc22b77d70a5c77"}, {"51": "6bca98a87662a3093ddb9c86bcc22b77d70a5c77"}], "ctags": [{"_type": "tag", "name": "AuthAndChatTests", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/api/tests.py", "pattern": "/^class AuthAndChatTests(APITestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "HealthTests", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/api/tests.py", "pattern": "/^class HealthTests(APITestCase):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_auth_headers", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/api/tests.py", "pattern": "/^    def _auth_headers(self, access):$/", "language": "Python", "kind": "member", "signature": "(self, access)", "scope": "AuthAndChatTests", "scopeKind": "class"}, {"_type": "tag", "name": "setUp", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/api/tests.py", "pattern": "/^    def setUp(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "AuthAndChatTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_health", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/api/tests.py", "pattern": "/^    def test_health(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "HealthTests", "scopeKind": "class"}, {"_type": "tag", "name": "test_signup_login_and_chat_mock", "path": "/home/kavia/workspace/code-generation/intelligent-qna-chatbot-platform-2776-2786/qna_backend/api/tests.py", "pattern": "/^    def test_signup_login_and_chat_mock(self):$/", "language": "Python", "kind": "member", "signature": "(self)", "scope": "AuthAndChatTests", "scopeKind": "class"}], "hash": "af6e2dc1132e253437a887d5784de5d0", "format-version": 4, "code-base-name": "qna_backend", "filename": "qna_backend/api/tests.py"}